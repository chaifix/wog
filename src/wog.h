/**
* Copyright (c) 2015~2017 chai(neonum)
*
* This library is free software; you can redistribute it and/or modify it
* under the terms of the MIT license. See LICENSE for details.
*/

#ifndef _WOG_H
#define _WOG_H
#include <Windows.h>

typedef unsigned int uint32; 
typedef unsigned short uint16; 

enum 
{
    WOG_EUNKNOWN = 0, // unknown event  
    WOG_EKEYDOWN,     // key pressed 
    WOG_EKEYUP,       // key released 
    WOG_EMOUSEMOTION, // mouse motion 
    WOG_ERESIZE,      // resize 
    WOG_EQUIT,
};

typedef struct wog_Event
{
    int type; 
    union
    {
        int key;      // for key 
        struct        // for mouse motion
        {
            int x, y; // mouse position 
        }pos;
    };
}wog_Event;

/**
* Entry of user program which defined in user project. You need provide 
* this function's defination. 
*/
#define main wog_main
extern int wog_main(int argc, char* argv[]);

typedef struct wog_Window wog_Window;

/**
* Struct that hold opengl context generated by wglCreateContext() which 
* defined in opengl32.lib 
*/
typedef struct wog_GLContext wog_GLContext;

/**
* Create window with given configures. 
* flag would be:
*    WOG_WND_FULLSCREEN 
*    WOG_WND_HIDDEN
*    WOG_WND_RESIZABLE
*/
wog_Window* wog_createWindow(const char* title, int width, int height, int x, int y, uint32 flags); 

wog_GLContext* wog_createGLContext(wog_Window* wnd);

int wog_makeCurrent(wog_Window* wnd, wog_GLContext* cxt);

void wog_destroyWindow(wog_Window* wnd);

void wog_destroyGLContext(wog_GLContext* cxt);

/**
* Swap Buffers (Double Buffering)
*/
void wog_swapBuffers(wog_Window* wnd); 

void wog_flushMessageQueue();

int wog_pollEvent(wog_Window* wnd, wog_Event* e);

void wog_getMouse(wog_Window* wnd, int *x, int *y);

#endif